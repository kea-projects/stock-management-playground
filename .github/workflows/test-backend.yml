name: Test backend
on:
  pull_request:
    branches: [development]

defaults:
  run:
    working-directory: backend

jobs:
  lint:
    name: Check code quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Lint with flake8
        run: |
          pip install flake8 flake8-html
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          mkdir -p reports/flake8
          flake8 . --count --max-complexity=10 --max-line-length=79 --statistics --format=html --htmldir=reports/flake8
      - name: Archive flake8 coverage results
        uses: actions/upload-artifact@v1
        with:
          name: flake8-coverage-report
          path: reports/flake8/

  test:
    name: Test backend development
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
          poetry shell
      - name: Test with pytest
        run: |
          poetry add pytest pytest-cov pytest-html pytest-sugar pytest-json-report
          py.test -v --cov --html=reports/pytest/report.html
      - name: Archive pytest coverage results
        uses: actions/upload-artifact@v1
        with:
          name: pytest-coverage-report
          path: reports/pytest/

  security_checks:
    needs: test
    runs-on: ubuntu-latest
    name: Security check
    steps:
      - uses: actions/checkout@v2
      - name: Run PyCharm Security
        uses: tonybaloney/pycharm-security@master
        with:
          path: app/
